module(
    name = "kj-rs",
    repo_name = "kj-rs",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_rust", version = "0.60.0")

# LLVM

bazel_dep(name = "toolchains_llvm", version = "1.3.0")

# Configure and register the toolchain.
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(llvm_version = "19.1.3")
use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

# Required by `--extra_toolchains=@local_config_cc//:cc-toolchain-x64_windows-clang-cl` in .bazelrc.
cc_configure = use_extension("@rules_cc//cc:extensions.bzl", "cc_configure_extension")
use_repo(cc_configure, "local_config_cc")

# Cap'n Proto

# capnp-cpp deps
bazel_dep(name = "boringssl", version = "0.20250212.0", repo_name = "ssl")
bazel_dep(name = "brotli", version = "1.1.0")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "zlib", version = "1.3.1.bcr.5")

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "capnp-cpp",
    sha256 = "ce4d082c20f2df051d718a3a72fc6029e84c589c87bc93b8cfeb79522577e822",
    strip_prefix = "capnproto-capnproto-fd3001e/c++",
    type = "tgz",
    url = "https://github.com/capnproto/capnproto/tarball/fd3001e9ae9c8efaa007518901711ead5584167a",
)

http_archive(
    name = "workerd-cxx",
    sha256 = "b54d7796d5287286e2051fd7fb4f10b48db343bb16f6ba6137a438a71797ad39",
    strip_prefix = "cloudflare-workerd-cxx-ca0033f",
    type = "tgz",
    url = "https://github.com/cloudflare/workerd-cxx/tarball/ca0033fa22cc96b17ff2ba7bc90a33a9cc6f6042",
)

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    commit = "4f28899228fb3ad0126897876f147ca15026151e",
)

# Vendored crates

vendored = use_extension("//:build/vendor_extensions.bzl", "vendored")

# The list of used repos here is kept up to date by `bazel run //deps/rust:crates_vendor -- --repin`.
use_repo(
    vendored,
    "crates.io",
    "crates.io__cc-1.2.20",
    "crates.io__clap-4.5.37",
    "crates.io__codespan-reporting-0.12.0",
    "crates.io__foldhash-0.1.4",
    "crates.io__proc-macro2-1.0.94",
    "crates.io__quote-1.0.39",
    "crates.io__rustversion-1.0.20",
    "crates.io__scratch-1.0.8",
    "crates.io__syn-2.0.100",
)
