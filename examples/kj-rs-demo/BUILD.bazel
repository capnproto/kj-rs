load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_rust//rust:defs.bzl", "rust_library")
load("//:build/rust_cxx_bridge.bzl", "rust_cxx_bridge")

# https://bazel.build/configure/windows#clang
platform(
    name = "x64_windows-clang-cl",
    constraint_values = [
        "@platforms//cpu:x86_64",
        "@platforms//os:windows",
        "@bazel_tools//tools/cpp:clang-cl",
    ],
)

rust_library(
    name = "awaitables-rust",
    srcs = glob(["src/**/*.rs"]),
    edition = "2021",
    deps = [
        ":rust-bridge",
        # TODO(now): Why isn't :cxx transitive?
        "@workerd-cxx//:cxx",
        "//:kj-rs",
    ],
)

rust_cxx_bridge(
    name = "rust-bridge",
    src = "src/lib.rs",
    hdrs = glob(["src/**/*.h"]),
    include_prefix = "kj-rs-demo",
    deps = [
        ":awaitables-include",
    ],
)

cc_library(
    name = "awaitables-include",
    hdrs = [
        "src/future-boilerplate.h",
        "src/promise-boilerplate.h",
        "src/test-promises.h",
    ],
    include_prefix = "kj-rs-demo",
    strip_include_prefix = "src",
    deps = [
        "//:kj-rs",
        "@capnp-cpp//src/kj:kj",
        "@capnp-cpp//src/kj:kj-async",
        # "@workerd-cxx//:cxx_cc",
    ],
)

cc_library(
    name = "awaitables-cc",
    srcs = [
        "src/promise-boilerplate.c++",
        "src/test-promises.c++",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":awaitables-include",
        "//:kj-rs",
        ":rust-bridge",
    ],
)

cc_test(
    name = "awaitables-cc-test",
    size = "medium",
    srcs = [
        "src/awaitables-cc-test.c++",
    ],
    deps = [
        ":awaitables-cc",
        ":awaitables-rust",
        ":rust-bridge",
        "@capnp-cpp//src/kj:kj-test",
    ],
)
